/**
 * Поддержка запуска jetty сервера
 */

//#classpath=jetty

import org.mortbay.jetty.*

jetty = createExt()

/**
 * Запуск jetty сервера
 *
 * @param port
 *    Порт. По умолчанию 8080
 * @param context
 *    Контекст. По умолчанию '/'
 * @param war
 *    Каталог с web-приложением. По умолчанию 'web' в текущем каталоге проекта
 * @param libs
 *    Список библиотек, которые нужно включить в classpath
 */
jetty.run = {Map pp ->
    def p = ut.asVariantMap(pp)
    //
    def port = p.get('port', 8080)
    def context = p.get('context', "/")
    if (!context.startsWith("/")) {
        context = "/" + context
    }
    def war = p.get('war', wd("web"))
    def libs = p.get('libs', [])
    //
    def webDefault = repo.getFile("scripts/jetty/webdefault.xml")
    //
    repo.addClasspath(libs + ["jetty", "servlet-api"])

    //
    def server = new org.mortbay.jetty.Server()
    def connector = new org.mortbay.jetty.nio.SelectChannelConnector()
    def webapp = new org.mortbay.jetty.webapp.WebAppContext()

    //
    connector.port = port
    server.addConnector(connector)
    webapp.contextPath = context
    webapp.war = war
    webapp.defaultsDescriptor = webDefault
    server.handler = webapp

    //
    server.start()
    server.join()
    //
}
