import jandcode.wax.verdb.*

// help по умолчанию для указания модели
def HELP_M = [value: "default", help: "Имя зарегистрированной модели. По умолчанию 'default'"]

//
db_ver = cm("Показать версию базы данных",
        m: HELP_M
) {
    VerdbProjectExt verdb_ext = createExt("jandcode.wax.verdb.VerdbProjectExt")
    verdb_ext.dbmext.printDbInfo()
    verdb_ext.modelName = args.m
    def svc = verdb_ext.dbmext.db.service(WaxVerdbService)
    def curver = svc.getCurrentVer()
    def needver = svc.getNeedVer()
    println "Текущая версия базы данных     : ${curver}"
    println "Необходимая версия базы данных : ${needver}"
}

//
db_upgrade = cm("Обновление версии базы данных",
        m: HELP_M
) {
    db_ver(m: args.m)
    VerdbProjectExt verdb_ext = createExt("jandcode.wax.verdb.VerdbProjectExt")
    verdb_ext.modelName = args.m
    def svc = verdb_ext.dbmext.db.service(WaxVerdbService)
    int curver = svc.getCurrentVer()
    int needver = svc.getNeedVer()
    if (curver == needver) {
        log "Версия базы данных не требует обновления"
        return
    }
    if (curver > needver) {
        log "Текущая версия больше необходимой"
        return
    }
    print """
**********************************************************************
Будет осуществлена смена версии базы данных ${curver} => ${needver}!
Настоятельно рекомендуем проверить эту процедуру на тестовом сервере!
**********************************************************************
Подтвердите, что действительно хотите этого (Y/N): """
    def yn = System.console().readLine()
    yn = yn.toLowerCase()
    if (yn != 'y') {
        error("Отменено пользователем")
    }

    ///////

    def vs = verdb_ext.getVerInfoRange(curver + 1, needver)
    log "changeset order: ${vs}"

    for (vs1 in vs) {
        vs1.applyMigrateSteps(verdb_ext.dbmext)
    }

    ///////

    log "ok"

}
